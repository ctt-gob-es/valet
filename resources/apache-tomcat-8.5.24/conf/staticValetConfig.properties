#============================================================================
# Fichero de configuración de parámetros estáticos de valET
#============================================================================

#--------------------------------------------------------------------------------
# INSTANCE
#--------------------------------------------------------------------------------
# Identificador único que se usará en los desplegables de valET establecidos
# en esta instancia. Este identificador NO debe coincidir con ningún otro
# definido en otra instancia.
instance.name.id = changeit

#--------------------------------------------------------------------------------
# CACHE
#--------------------------------------------------------------------------------
# Tipo de implementación a usar para la caché de valET. Posibles valores:
# - JavaConcurrentMap: Implementación Java de un Map con accesos concurrentes.
cache.implementation = JavaConcurrentMap
# Tiempo de espera (en segundos) antes de detener/destruir la caché de configuración
# tras una recarga en una nueva.
cache.idleTimeBeforeStopCache = 30

#--------------------------------------------------------------------------------
# AUDIT
#--------------------------------------------------------------------------------
# Número de dos dígitos que formará parte de los identificadores de transacción
# generados dinámicamente para cada operación realizada por la plataforma.
# Si el número indicado es de más de dos dígitos, se calculará automáticamente su módulo 100
# para considerarlo de dos dígitos.
# Si el valor indicado no es un número, se producirá un error grave en el despliegue de la 
# plataforma. 
# ESTE NÚMERO DEBE SER ÚNICO PARA CADA UNA DE LAS INSTANCIAS DE VALET.
audit.transaction.number.uniqueid = 00

#----------------------------------------------------------------------------
# KEYSTORE
#----------------------------------------------------------------------------
# Lista de caracteres especiales no permitidos en el alias de un certificado: /,^,*,=,(,),&,%,$,·,",!,[,],{,},ç,¿,?,¬,#
character.special = /,^,*,=,(,),&,%,$,\u00B7,",\u00A1,!,[,],{,},\u00E7,\u00C7,\u00BF,?,\u00AC,\u0023

#----------------------------------------------------------------------------
# AES CIPHER
#----------------------------------------------------------------------------
# Nombre asignado para AES dentro del proveedor criptográfico.
aes.algorithm = AES
# Algoritmo de "no padding" para el cifrado AES.
aes.nopadding.alg = AES/GCM/NoPadding
# Clave/contraseña a usar en el algoritmo de cifrado AES.
aes.password = ABCDEFGHIJKLMNOP

#----------------------------------------------------------------------------
# TSL
#----------------------------------------------------------------------------
# Bandera que indica si se debe comprobar que la firma de la TSL tiene una estructura
# correcta y es válida (true) o no (false).
tsl.signature.verify.structure = true
# Bandera que indica si se debe comprobar que la firma de la TSL está definida
# completamente tal y como indica su especificación técnica (true) o no (false).
tsl.signature.verify.specification = false
# Fecha a partir de la cual se permite el uso de TSL para la validación de certificados.
tsl.validation.initial.date = 01/07/2016
# Tiempo (en milisegundos) de timeout de conexión para los accesos a los servidores OCSP.
# Por defecto toma el valor 10000 milisegundos.
tsl.validation.ocsp.timeout.connection = 10000
# Tiempo (en milisegundos) de timeout de lectura para los accesos a los servidores OCSP.
# Por defecto toma el valor 10000 milisegundos.
tsl.validation.ocsp.timeout.read = 10000
# Tiempo (en segundos) de intervalo permitido para el uso de una respuesta OCSP respecto a una 
# fecha de validación. Por defecto toma el valor de 3600 segundos (1 hora).
tsl.validation.ocsp.interval.allowed = 3600
# Tiempo (en milisegundos) de timeout de conexión para los accesos a los recursos de tipo CRL.
# Por defecto toma el valor 10000 milisegundos.
tsl.validation.crl.timeout.connection = 10000
# Tiempo (en milisegundos) de timeout de lectura para los accesos a los recursos de tipo CRL.
# Por defecto toma el valor 10000 milisegundos. 
tsl.validation.crl.timeout.read = 10000
# Lista de valores correspondientes al campo lógico 'clasificacion' que se mapean en el campo lógico 
# 'certClassification' por NATURAL_PERSON.
tsl.mapping.certClassification.NATURAL_PERSON = 
#Lista de valores correspondientes al campo lógico 'clasificacion' que se mapean en el campo lógico 
#'certClassification' por LEGAL_PERSON.
tsl.mapping.certClassification.LEGAL_PERSON = 
# Lista de valores correspondientes al campo lógico 'clasificacion' que se mapean en el campo lógico
# 'certClassification' por ESIG.
tsl.mapping.certClassification.ESIG = 0, 5, 7, 11, 12
# Lista de valores correspondientes al campo lógico 'clasificacion' que se mapean en el campo lógico
# 'certClassification' por ESEAL.
tsl.mapping.certClassification.ESEAL = 8
# Lista de valores correspondientes al campo lógico 'clasificacion' que se mapean en el campo lógico
# 'certClassification' por WSA.
tsl.mapping.certClassification.WSA = 9
# Lista de valores correspondientes al campo lógico 'clasificacion' que se mapean en el campo lógico
# 'certQualified' por YES.
tsl.mapping.certQualified.YES = 0, 3, 4, 5, 7, 8, 9, 10, 11, 12
# Lista de valores correspondientes al campo lógico 'clasificacion' que se mapean en el campo lógico
# 'certQualified' por NO.
tsl.mapping.certQualified.NO = 1, 2, 3
# Propiedad usada en el servicio 'detectCertInTslInfoAndValidation' que indica para el parámetro
# de entrada que determina la fecha de validación, la ventana de tiempo permitida respecto a la fecha
# actual en la que puede exceder hacia el futuro este parámetro. Se mide en milisegundos.
tsl.service.detectCertInTslInfoAndValidation.validationDate.timeGapAllowed = 30000
# Listado de URL que apuntan (o han apuntado) hacia la declaración de la lista de TSL
# europeas (European List Of Trusted Lists).
# Su declaración debe realizarse del siguiente modo:
# tsl.eu.lotl.1 = URL_1
# ...
# tsl.eu.lotl.N = URL_N
tsl.eu.lotl.1 = https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl-mp.xml
tsl.eu.lotl.2 = https://ec.europa.eu/tools/lotl/eu-lotl.xml

#----------------------------------------------------------------------------
# GRAY-LOG
#----------------------------------------------------------------------------
# Propiedades relativas a la integración y uso de GRAY-LOG en valET.
# Bandera que indica si estará activo el uso de Gray-Log para esta instancia de valET.
graylog.enabled = false

# Host de destino para enviar los mensajes UDP a GrayLog.
graylog.destination.host = 
# Puerto de destino para enviar los mensajes UDP a GrayLog.
graylog.destination.port = 

# Nivel de trazas máximo que se mandará a Gray-Log.
# Si el aplicativo genera trazas de mayor nivel, estas no se enviarán.
# Los niveles que existen son:
# - FATAL: 2.
# - ERROR: 3.
# - WARN: 4.
# - INFO: 6.
# - DEBUG: 7.
graylog.maxLevelTraceAllowed = 3

# Listado de campos (fields) que se añadirán de forma constante a los mensajes
# que se envíen a GrayLog. Cada uno de estos campos se definirá del siguiente modo:
#     graylog.field.FIELDNAME = VALUE
# donde:
#     FIELDNAME = Identificador que se asignará al campo.
#     VALUE = Valor a asignar para el campo.
# Es importante tener en cuenta que los campos que aquí se definan sobrescribirán
# a aquellos que se añadan en ejecución (si el identificador es el mismo).
# Los campos "entorno" y "app" son obligatorios para los entornos del Ministerio.
# Valores posibles para 'graylog.field.entorno': DES, PRE, SE y PRO. 
#graylog.field.entorno = DES
#graylog.field.app = valet


#----------------------------------------------------------------------------
# SSL
#----------------------------------------------------------------------------
# Propiedades relativas a la gestión de comunicaciones con SSL.
# Listado de algoritmos de negociado SSL restringidos (separados por comas).
ssl.restricted.cipher.suites = 
# Listado de protocolos de comunicación SSL restringidos (separados por comas). 
ssl.restricted.protocols = SSLv2Hello

#----------------------------------------------------------------------------
# CONNECTION
#----------------------------------------------------------------------------
# Propiedades generales relativas a las conexiones que realiza la plataforma.
# Propiedad que determina el tamaño máximo (en bytes) permitido para la obtención de recursos. 
connection.MaxSize = 5242880

#----------------------------------------------------------------------------
# TASK
#----------------------------------------------------------------------------
# Listado de propiedades (en bloques de 4) que definen las tareas que serán ejecutadas
# en segundo plano por el aplicativo.
# Las tareas aquí definidas no son configurables a nivel de administración.
# Cualquier tarea aquí incluída, debe contener las siguiente propiedades:
# task.NombreTarea.target = Valor que indica si esta tarea se ejecutará en las instancias
#                           de administración, de servicio, o ambas. Posibles valores:
# 							administration --> Solo se ejecutará en instancias de administración.
# 							service 	   --> Solo se ejecutará en instancias de servicios.
#							both           --> Se ejecutará en ambos tipos de instancias.
# task.NombreTarea.class = Nombre completo (incluyendo ruta de paquetes) de la clase que 
# 						   implementa la acción de la tarea.
# task.NombreTarea.startDate = Fecha de ejecución para la tarea. Debe seguir el siguiente
#							   formato: dd-MM-yy_HH-mm-ss
# 							   Otros posibles valores en vez de la fecha concreta:
#							   NOW			--> La ejecución se realiza 10 segundos después de inicializar la tarea.
#							   WAIT_PERIOD  --> La primera ejecución se realiza tras esperar el periodo definido (mínimo 10 segundos para la primera ejecución).
# task.NombreTarea.period = Número que representa el periodo de repetición de la tarea
#							en milisegundos. Si a esta propiedad se le asigna el valor
#							0, entonces la tarea tan solo se ejecuta una vez.
#
# Tarea ReloadCacheTask: Se encarga de forzar una recarga de la configuración en
# la caché del aplicativo. Esta tarea tan solo se ejecuta en las instancias de servicio.
task.ReloadCacheTask.target = service
task.ReloadCacheTask.class = es.gob.valet.tasks.ReloadCacheTask
task.ReloadCacheTask.startDate = WAIT_PERIOD
task.ReloadCacheTask.period = 300000
